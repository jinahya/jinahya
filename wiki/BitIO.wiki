#summary Java Bit Level I/O.

= Introduction =

A simple wrapper for bit level I/O with InputStream and OutputStream.


= Details =
You can read/write variable length of bits from/to InputStream and OutputStream.

== Values ==
|| *type* || *bit range* || *notes* ||
|| boolean || 1 || 1 for true; 0 for false ||
|| int || 1(inclusive) ~ 32(exclusive) || ||
|| signed int ||1(exclusive) ~ 32(inclusive) || ||
|| unsigned long || 1(inclusive) ~ 64(exclusive) || ||
|| long || 1(exclusive) ~ 64(inclusive) || ||

=== Boolean ===
Consumes only one bit. 1 for true; 0 for false;
=== Unsigned Integer ===
You can read/write an unsigned integer of between 1 (inclusive) and 32 (exclusive) bits.
{{{
int readUnsignedInt(length);
void writeUnsignedInt(length, value);
}}}
=== Signed Integer ===
=== Unsigned Long ===
=== Signed Long ===
Create.
{{{
final BitInput in = new BitInput(InputStream);
}}}
Reads values.
{{{
boolean readBoolean();
int readUnsignedInt(int length);
int readInt(int length);
long read
Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages