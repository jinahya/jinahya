<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="24" tokens="110">
<file line="39" path="/home/onacit/.hudson/jobs/jinahya.util event-listener-support-jdk13 build.sh/workspace/trunk/src/main/java/jinahya/util/els/EventListenerSupport.java"/>
<file line="98" path="/home/onacit/.hudson/jobs/jinahya.util event-listener-support-jdk13 build.sh/workspace/trunk/src/main/java/jinahya/util/els/EventListenerSupport.java"/>
<codefragment>
<![CDATA[
    public boolean contains(final Class listenerClass,
                            final EventListener listenerInstance) {

        if (listenerClass == null) {
            throw new NullPointerException("listenerClass");
        }

        if (!EventListener.class.isAssignableFrom(listenerClass)) {
            throw new IllegalArgumentException(
                listenerClass + " is not assignable to " + EventListener.class);
        }

        if (listenerInstance == null) {
            throw new NullPointerException("listenerInstance");
        }

        if (!listenerClass.isInstance(listenerInstance)) {
            throw new IllegalArgumentException(
                listenerInstance + " is not an instance of " + listenerClass);
        }

        synchronized (table) {
            Vector instances = (Vector) table.get(listenerClass);
            if (instances == null) {
]]>
</codefragment>
</duplication>
<duplication lines="24" tokens="106">
<file line="39" path="/home/onacit/.hudson/jobs/jinahya.util event-listener-support-jdk13 build.sh/workspace/trunk/src/main/java/jinahya/util/els/EventListenerSupport.java"/>
<file line="228" path="/home/onacit/.hudson/jobs/jinahya.util event-listener-support-jdk13 build.sh/workspace/trunk/src/main/java/jinahya/util/els/EventListenerSupport.java"/>
<codefragment>
<![CDATA[
    public boolean remove(final Class listenerClass,
                          final EventListener listenerInstance) {

        if (listenerClass == null) {
            throw new NullPointerException("listenerClass");
        }

        if (!EventListener.class.isAssignableFrom(listenerClass)) {
            throw new IllegalArgumentException(
                listenerClass + " is not assignable to " + EventListener.class);
        }

        if (listenerInstance == null) {
            throw new NullPointerException("listenerInstance");
        }

        if (!listenerClass.isInstance(listenerInstance)) {
            throw new IllegalArgumentException(
                listenerInstance + " is not an instance of " + listenerClass);
        }

        synchronized (table) {
            Vector instances = (Vector) table.get(listenerClass);
            if (instances != null) {
]]>
</codefragment>
</duplication>
</pmd-cpd>