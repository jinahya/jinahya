<?xml version="1.0"?>
<classes>
  <spec name="JSR-000139 Connected Limited Device Configuration 1.1">
    <class modifiers="public abstract interface" name="java.io.DataInput" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.DataOutput" isInterface="true=">
    </class>
    <class modifiers="public" name="java.io.ByteArrayInputStream" superClass="java.io.InputStream">
    </class>
    <class modifiers="public" name="java.io.ByteArrayOutputStream" superClass="java.io.OutputStream">
    </class>
    <class modifiers="public" name="java.io.DataInputStream" superClass="java.io.FilterInputStream" interfaces="java.io.DataInput">
    </class>
    <class modifiers="public" name="java.io.DataOutputStream" superClass="java.io.FilterOutputStream" interfaces="java.io.DataOutput">
    </class>
    <class modifiers="public abstract" name="java.io.InputStream" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.io.InputStreamReader" superClass="java.io.Reader">
    </class>
    <class modifiers="public abstract" name="java.io.OutputStream" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.io.OutputStreamWriter" superClass="java.io.Writer">
    </class>
    <class modifiers="public" name="java.io.PrintStream" superClass="java.io.FilterOutputStream">
    </class>
    <class modifiers="public abstract" name="java.io.Reader" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.io.Writer" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.io.EOFException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.InterruptedIOException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.IOException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.io.UnsupportedEncodingException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.UTFDataFormatException" superClass="java.io.IOException">
    </class>
    <class modifiers="public abstract interface" name="java.lang.Runnable" isInterface="true=">
    </class>
    <class modifiers="public final" name="java.lang.Boolean" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.lang.Byte" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Character" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Class" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.lang.Double" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Float" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Integer" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Long" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.Math" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.Runtime" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.Short" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.lang.String" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Comparable,java.lang.CharSequence">
    </class>
    <class modifiers="public final" name="java.lang.StringBuffer" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.CharSequence">
    </class>
    <class modifiers="public final" name="java.lang.System" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.Thread" superClass="java.lang.Object" interfaces="java.lang.Runnable">
    </class>
    <class modifiers="public" name="java.lang.Throwable" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.lang.ArithmeticException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.ArrayIndexOutOfBoundsException" superClass="java.lang.IndexOutOfBoundsException">
    </class>
    <class modifiers="public" name="java.lang.ArrayStoreException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.ClassCastException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.ClassNotFoundException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.Exception" superClass="java.lang.Throwable">
    </class>
    <class modifiers="public" name="java.lang.IllegalAccessException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.IllegalArgumentException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.IllegalMonitorStateException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.IllegalThreadStateException" superClass="java.lang.IllegalArgumentException">
    </class>
    <class modifiers="public" name="java.lang.IndexOutOfBoundsException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.InstantiationException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.InterruptedException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.NegativeArraySizeException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.NullPointerException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.NumberFormatException" superClass="java.lang.IllegalArgumentException">
    </class>
    <class modifiers="public" name="java.lang.RuntimeException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.SecurityException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.StringIndexOutOfBoundsException" superClass="java.lang.IndexOutOfBoundsException">
    </class>
    <class modifiers="public" name="java.lang.Error" superClass="java.lang.Throwable">
    </class>
    <class modifiers="public" name="java.lang.NoClassDefFoundError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.OutOfMemoryError" superClass="java.lang.VirtualMachineError">
    </class>
    <class modifiers="public abstract" name="java.lang.VirtualMachineError" superClass="java.lang.Error">
    </class>
    <class modifiers="public abstract" name="java.lang.ref.Reference" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.ref.WeakReference" superClass="java.lang.ref.Reference">
    </class>
    <class modifiers="public abstract interface" name="java.util.Enumeration" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.util.Calendar" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.Date" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Cloneable,java.lang.Comparable">
    </class>
    <class modifiers="public" name="java.util.Hashtable" superClass="java.util.Dictionary" interfaces="java.util.Map,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.Random" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.Stack" superClass="java.util.Vector">
    </class>
    <class modifiers="public abstract" name="java.util.TimeZone" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.Vector" superClass="java.util.AbstractList" interfaces="java.util.List,java.util.RandomAccess,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.EmptyStackException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.util.NoSuchElementException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.Connection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.ContentConnection" interfaces="javax.microedition.io.StreamConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.Datagram" interfaces="java.io.DataInput,java.io.DataOutput" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.DatagramConnection" interfaces="javax.microedition.io.Connection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.InputConnection" interfaces="javax.microedition.io.Connection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.OutputConnection" interfaces="javax.microedition.io.Connection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.StreamConnection" interfaces="javax.microedition.io.InputConnection,javax.microedition.io.OutputConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.StreamConnectionNotifier" interfaces="javax.microedition.io.Connection" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.microedition.io.Connector" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.microedition.io.ConnectionNotFoundException" superClass="java.io.IOException">
    </class>
    <result name="JSR-000139 Connected Limited Device Configuration 1.1" total="81" found="81" compatibility="1.0"/>
  </spec>
  <spec name="JSR-000172 J2METM Web Services Specification">
    <class modifiers="public abstract interface" name="java.rmi.Remote" isInterface="true=">
    </class>
    <class name="java.rmi.MarshalException" found="false"/>
    <class modifiers="public" name="java.rmi.RemoteException" superClass="java.io.IOException">
    </class>
    <class name="java.rmi.ServerException" found="false"/>
    <class name="javax.microedition.xml.rpc.FaultDetailHandler" found="false"/>
    <class name="javax.microedition.xml.rpc.ComplexType" found="false"/>
    <class name="javax.microedition.xml.rpc.Element" found="false"/>
    <class name="javax.microedition.xml.rpc.Operation" found="false"/>
    <class name="javax.microedition.xml.rpc.Type" found="false"/>
    <class name="javax.microedition.xml.rpc.FaultDetailException" found="false"/>
    <class name="javax.xml.namespace.QName" found="false"/>
    <class modifiers="public abstract" name="javax.xml.parsers.SAXParser" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="javax.xml.parsers.SAXParserFactory" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.xml.parsers.ParserConfigurationException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="javax.xml.parsers.FactoryConfigurationError" superClass="java.lang.Error">
    </class>
    <class name="javax.xml.rpc.Stub" found="false"/>
    <class name="javax.xml.rpc.NamespaceConstants" found="false"/>
    <class name="javax.xml.rpc.JAXRPCException" found="false"/>
    <class modifiers="public abstract interface" name="org.xml.sax.Attributes" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="org.xml.sax.Locator" isInterface="true=">
    </class>
    <class modifiers="public" name="org.xml.sax.InputSource" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="org.xml.sax.SAXException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="org.xml.sax.SAXNotRecognizedException" superClass="org.xml.sax.SAXException">
    </class>
    <class modifiers="public" name="org.xml.sax.SAXNotSupportedException" superClass="org.xml.sax.SAXException">
    </class>
    <class modifiers="public" name="org.xml.sax.SAXParseException" superClass="org.xml.sax.SAXException">
    </class>
    <class modifiers="public" name="org.xml.sax.helpers.DefaultHandler" superClass="java.lang.Object">
    </class>
    <result name="JSR-000172 J2METM Web Services Specification" total="26" found="14" compatibility="0.53846157"/>
  </spec>
  <spec name="JSR-000177 Security and Trust Services API for J2METM">
    <class modifiers="public" name="java.lang.UnsupportedOperationException" superClass="java.lang.RuntimeException">
    </class>
    <class name="java.rmi.Rmote" found="false"/>
    <class modifiers="public abstract interface" name="java.security.Key" interfaces="java.io.Serializable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.PublicKey" interfaces="java.security.Key" isInterface="true=">
    </class>
    <class modifiers="public" name="java.security.KeyFactory" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.MessageDigest" superClass="java.security.MessageDigestSpi">
    </class>
    <class modifiers="public abstract" name="java.security.Signature" superClass="java.security.SignatureSpi">
    </class>
    <class modifiers="public" name="java.security.DigestException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.GeneralSecurityException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.security.InvalidAlgorithmParameterException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.InvalidKeyException" superClass="java.security.KeyException">
    </class>
    <class modifiers="public" name="java.security.KeyException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.NoSuchAlgorithmException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.SignatureException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public abstract interface" name="java.security.spec.AlgorithmParameterSpec" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.spec.KeySpec" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.security.spec.EncodedKeySpec" superClass="java.lang.Object" interfaces="java.security.spec.KeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.X509EncodedKeySpec" superClass="java.security.spec.EncodedKeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.InvalidKeySpecException" superClass="java.security.GeneralSecurityException">
    </class>
    <class name="javacard.framework.APDUException" found="false"/>
    <class name="javacard.framework.CardException" found="false"/>
    <class name="javacard.framework.CardRuntimeException" found="false"/>
    <class name="javacard.framework.ISOException" found="false"/>
    <class name="javacard.framework.PINException" found="false"/>
    <class name="javacard.framework.SystemException" found="false"/>
    <class name="javacard.framework.TransactionException" found="false"/>
    <class name="javacard.framework.UserException" found="false"/>
    <class name="javacard.framework.service.ServiceException" found="false"/>
    <class name="javacard.security.CryptoException" found="false"/>
    <class modifiers="public" name="javax.crypto.Cipher" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.crypto.BadPaddingException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="javax.crypto.IllegalBlockSizeException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="javax.crypto.NoSuchPaddingException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="javax.crypto.ShortBufferException" superClass="java.security.GeneralSecurityException">
    </class>
    <class name="javax.microedition.apdu.APDUConnection" found="false"/>
    <class name="javax.microedition.jcrmi.JavaCardRMIConnection" found="false"/>
    <class name="javax.microedition.jcrmi.RemoteRef" found="false"/>
    <class name="javax.microedition.jcrmi.RemoteStub" found="false"/>
    <class name="javax.microedition.pki.UserCredentialManager" found="false"/>
    <class name="javax.microedition.pki.UserCredentialManagerException" found="false"/>
    <class name="javax.microedition.securityservice.CMSMessageSignatureService" found="false"/>
    <class name="javax.microedition.securityservice.CMSMessageSignatureServiceException" found="false"/>
    <result name="JSR-000177 Security and Trust Services API for J2METM" total="43" found="24" compatibility="0.55813956"/>
  </spec>
  <spec name="JSR-000209 Advanced Graphics and User Interface Optional Package for the J2ME Platform">
    <class name="java.awt.Paint" found="false"/>
    <class name="java.awt.PaintContext" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.Shape" isInterface="true=">
    </class>
    <class name="java.awt.Stroke" found="false"/>
    <class modifiers="public final" name="java.awt.AlphaComposite" superClass="java.lang.Object" interfaces="java.awt.Composite">
    </class>
    <class name="java.awt.AWTKeyStroke" found="false"/>
    <class name="java.awt.BasicStroke" found="false"/>
    <class modifiers="public" name="java.awt.Color" superClass="java.lang.Object" interfaces="java.io.Serializable,java.awt.Transparency">
    </class>
    <class modifiers="public" name="java.awt.Dimension" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.Font" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class name="java.awt.GradientPaint" found="false"/>
    <class modifiers="public abstract" name="java.awt.Graphics2D" superClass="java.awt.Graphics">
    </class>
    <class modifiers="public abstract" name="java.awt.GraphicsConfiguration" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.awt.Point" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.Polygon" superClass="java.lang.Object" interfaces="java.awt.Shape,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.Rectangle" superClass="java.lang.Object" interfaces="java.awt.Shape,java.io.Serializable">
    </class>
    <class name="java.awt.RenderingHints" found="false"/>
    <class name="java.awt.RenderingHints.Key" found="false"/>
    <class name="java.awt.TexturePaint" found="false"/>
    <class name="java.awt.font.FontRenderContext" found="false"/>
    <class name="java.awt.font.GlyphJustificationInfo" found="false"/>
    <class name="java.awt.font.GlyphMetrics" found="false"/>
    <class name="java.awt.font.GlyphVector" found="false"/>
    <class name="java.awt.font.GraphicAttribute" found="false"/>
    <class name="java.awt.font.ImageGraphicAttribute" found="false"/>
    <class name="java.awt.font.LineBreakMeasurer" found="false"/>
    <class name="java.awt.font.LineMetrics" found="false"/>
    <class name="java.awt.font.NumericShaper" found="false"/>
    <class name="java.awt.font.ShapeGraphicAttribute" found="false"/>
    <class name="java.awt.font.TextAttribute" found="false"/>
    <class name="java.awt.font.TextLayout" found="false"/>
    <class name="java.awt.font.TextLayout.CaretPolicy" found="false"/>
    <class name="java.awt.font.TextMeasurer" found="false"/>
    <class name="java.awt.font.TransformAttribute" found="false"/>
    <class name="java.awt.geom.PathIterator" found="false"/>
    <class name="java.awt.geom.AffineTransform" found="false"/>
    <class name="java.awt.geom.Arc2D" found="false"/>
    <class name="java.awt.geom.Arc2D.Float" found="false"/>
    <class name="java.awt.geom.Area" found="false"/>
    <class name="java.awt.geom.CubicCurve2D" found="false"/>
    <class name="java.awt.geom.CubicCurve2D.Float" found="false"/>
    <class name="java.awt.geom.Dimension2D" found="false"/>
    <class name="java.awt.geom.Ellipse2D" found="false"/>
    <class name="java.awt.geom.Ellipse2D.Float" found="false"/>
    <class name="java.awt.geom.FlatteningPathIterator" found="false"/>
    <class name="java.awt.geom.GeneralPath" found="false"/>
    <class name="java.awt.geom.Line2D" found="false"/>
    <class name="java.awt.geom.Line2D.Float" found="false"/>
    <class name="java.awt.geom.Point2D" found="false"/>
    <class name="java.awt.geom.Point2D.Float" found="false"/>
    <class name="java.awt.geom.QuadCurve2D" found="false"/>
    <class name="java.awt.geom.QuadCurve2D.Float" found="false"/>
    <class name="java.awt.geom.Rectangle2D" found="false"/>
    <class name="java.awt.geom.Rectangle2D.Float" found="false"/>
    <class name="java.awt.geom.RectangularShape" found="false"/>
    <class name="java.awt.geom.RoundRectangle2D" found="false"/>
    <class name="java.awt.geom.RoundRectangle2D.Float" found="false"/>
    <class name="java.awt.geom.IllegalPathStateException" found="false"/>
    <class name="java.awt.geom.NoninvertibleTransformException" found="false"/>
    <class name="java.awt.image.BufferedImageOp" found="false"/>
    <class name="java.awt.image.RasterOp" found="false"/>
    <class name="java.awt.image.RenderedImage" found="false"/>
    <class name="java.awt.image.AffineTransformOp" found="false"/>
    <class modifiers="public" name="java.awt.image.BufferedImage" superClass="java.awt.Image">
    </class>
    <class name="java.awt.image.ConvolveOp" found="false"/>
    <class modifiers="public abstract" name="java.awt.image.DataBuffer" superClass="java.lang.Object">
    </class>
    <class name="java.awt.image.DataBufferInt" found="false"/>
    <class name="java.awt.image.Kernel" found="false"/>
    <class name="java.awt.image.LookupOp" found="false"/>
    <class name="java.awt.image.LookupTable" found="false"/>
    <class name="java.awt.image.Raster" found="false"/>
    <class name="java.awt.image.RescaleOp" found="false"/>
    <class name="java.awt.image.SampleModel" found="false"/>
    <class name="java.awt.image.SinglePixelPackedSampleModel" found="false"/>
    <class name="java.awt.image.WritableRaster" found="false"/>
    <class name="java.awt.image.ImagingOpException" found="false"/>
    <class name="java.nio.ByteOrder" found="false"/>
    <class name="javax.imageio.IIOParamController" found="false"/>
    <class name="javax.imageio.IIOImage" found="false"/>
    <class name="javax.imageio.IIOParam" found="false"/>
    <class name="javax.imageio.ImageIO" found="false"/>
    <class name="javax.imageio.ImageReader" found="false"/>
    <class name="javax.imageio.ImageReadParam" found="false"/>
    <class name="javax.imageio.ImageTypeSpecifier" found="false"/>
    <class name="javax.imageio.ImageWriteParam" found="false"/>
    <class name="javax.imageio.ImageWriter" found="false"/>
    <class name="javax.imageio.IIOException" found="false"/>
    <class name="javax.imageio.event.IIOReadProgressListener" found="false"/>
    <class name="javax.imageio.event.IIOReadUpdateListener" found="false"/>
    <class name="javax.imageio.event.IIOReadWarningListener" found="false"/>
    <class name="javax.imageio.event.IIOWriteProgressListener" found="false"/>
    <class name="javax.imageio.event.IIOWriteWarningListener" found="false"/>
    <class name="javax.imageio.metadata.IIOMetadata" found="false"/>
    <class name="javax.imageio.stream.ImageInputStream" found="false"/>
    <class name="javax.imageio.stream.ImageOutputStream" found="false"/>
    <class name="javax.imageio.stream.FileCacheImageInputStream" found="false"/>
    <class name="javax.imageio.stream.FileCacheImageOutputStream" found="false"/>
    <class name="javax.imageio.stream.FileImageInputStream" found="false"/>
    <class name="javax.imageio.stream.FileImageOutputStream" found="false"/>
    <class name="javax.imageio.stream.IIOByteBuffer" found="false"/>
    <class name="javax.imageio.stream.ImageInputStreamImpl" found="false"/>
    <class name="javax.imageio.stream.ImageOutputStreamImpl" found="false"/>
    <class name="javax.imageio.stream.MemoryCacheImageInputStream" found="false"/>
    <class name="javax.imageio.stream.MemoryCacheImageOutputStream" found="false"/>
    <class name="javax.microedition.agui.event.DeviceKeyEvent" found="false"/>
    <class name="javax.microedition.plaf.ButtonUI" found="false"/>
    <class name="javax.microedition.plaf.ComboBoxUI" found="false"/>
    <class name="javax.microedition.plaf.DesktopPaneUI" found="false"/>
    <class name="javax.microedition.plaf.LabelUI" found="false"/>
    <class name="javax.microedition.plaf.ListUI" found="false"/>
    <class name="javax.microedition.plaf.MenuBarUI" found="false"/>
    <class name="javax.microedition.plaf.MenuItemUI" found="false"/>
    <class name="javax.microedition.plaf.OptionPaneUI" found="false"/>
    <class name="javax.microedition.plaf.PopupMenuUI" found="false"/>
    <class name="javax.microedition.plaf.ProgressBarUI" found="false"/>
    <class name="javax.microedition.plaf.ScrollBarUI" found="false"/>
    <class name="javax.microedition.plaf.SliderUI" found="false"/>
    <class name="javax.microedition.plaf.SpinnerUI" found="false"/>
    <class name="javax.microedition.plaf.TabbedPaneUI" found="false"/>
    <class name="javax.microedition.plaf.TreeUI" found="false"/>
    <class name="javax.microedition.plaf.PlatformFactory" found="false"/>
    <class name="javax.swing.Action" found="false"/>
    <class name="javax.swing.BoundedRangeModel" found="false"/>
    <class name="javax.swing.ButtonModel" found="false"/>
    <class name="javax.swing.ComboBoxEditor" found="false"/>
    <class name="javax.swing.ComboBoxModel" found="false"/>
    <class name="javax.swing.Icon" found="false"/>
    <class name="javax.swing.JComboBox.KeySelectionManager" found="false"/>
    <class name="javax.swing.ListCellRenderer" found="false"/>
    <class name="javax.swing.ListModel" found="false"/>
    <class name="javax.swing.ListSelectionModel" found="false"/>
    <class name="javax.swing.MenuElement" found="false"/>
    <class name="javax.swing.MutableComboBoxModel" found="false"/>
    <class name="javax.swing.Renderer" found="false"/>
    <class name="javax.swing.RootPaneContainer" found="false"/>
    <class name="javax.swing.Scrollable" found="false"/>
    <class name="javax.swing.ScrollPaneConstants" found="false"/>
    <class name="javax.swing.SingleSelectionModel" found="false"/>
    <class name="javax.swing.SpinnerModel" found="false"/>
    <class name="javax.swing.SwingConstants" found="false"/>
    <class name="javax.swing.WindowConstants" found="false"/>
    <class name="javax.swing.AbstractAction" found="false"/>
    <class name="javax.swing.AbstractButton" found="false"/>
    <class name="javax.swing.AbstractListModel" found="false"/>
    <class name="javax.swing.AbstractSpinnerModel" found="false"/>
    <class name="javax.swing.ActionMap" found="false"/>
    <class name="javax.swing.BorderFactory" found="false"/>
    <class name="javax.swing.Box" found="false"/>
    <class name="javax.swing.Box.Filler" found="false"/>
    <class name="javax.swing.BoxLayout" found="false"/>
    <class name="javax.swing.ButtonGroup" found="false"/>
    <class name="javax.swing.ComponentInputMap" found="false"/>
    <class name="javax.swing.DefaultBoundedRangeModel" found="false"/>
    <class name="javax.swing.DefaultButtonModel" found="false"/>
    <class name="javax.swing.DefaultComboBoxModel" found="false"/>
    <class name="javax.swing.DefaultListModel" found="false"/>
    <class name="javax.swing.DefaultListSelectionModel" found="false"/>
    <class name="javax.swing.DefaultSingleSelectionModel" found="false"/>
    <class name="javax.swing.GrayFilter" found="false"/>
    <class name="javax.swing.ImageIcon" found="false"/>
    <class name="javax.swing.InputMap" found="false"/>
    <class name="javax.swing.InputVerifier" found="false"/>
    <class name="javax.swing.InternalFrameFocusTraversalPolicy" found="false"/>
    <class name="javax.swing.JButton" found="false"/>
    <class name="javax.swing.JCheckBox" found="false"/>
    <class name="javax.swing.JCheckBoxMenuItem" found="false"/>
    <class name="javax.swing.JComboBox" found="false"/>
    <class name="javax.swing.JComponent" found="false"/>
    <class name="javax.swing.JDesktopPane" found="false"/>
    <class name="javax.swing.JEditorPane" found="false"/>
    <class name="javax.swing.JFormattedTextField" found="false"/>
    <class name="javax.swing.JFormattedTextField.AbstractFormatter" found="false"/>
    <class name="javax.swing.JFormattedTextField.AbstractFormatterFactory" found="false"/>
    <class name="javax.swing.JFrame" found="false"/>
    <class name="javax.swing.JInternalFrame" found="false"/>
    <class name="javax.swing.JLabel" found="false"/>
    <class name="javax.swing.JLayeredPane" found="false"/>
    <class name="javax.swing.JList" found="false"/>
    <class name="javax.swing.JMenu" found="false"/>
    <class name="javax.swing.JMenuBar" found="false"/>
    <class name="javax.swing.JMenuItem" found="false"/>
    <class name="javax.swing.JOptionPane" found="false"/>
    <class name="javax.swing.JPanel" found="false"/>
    <class name="javax.swing.JPasswordField" found="false"/>
    <class name="javax.swing.JPopupMenu" found="false"/>
    <class name="javax.swing.JProgressBar" found="false"/>
    <class name="javax.swing.JRadioButton" found="false"/>
    <class name="javax.swing.JRadioButtonMenuItem" found="false"/>
    <class name="javax.swing.JRootPane" found="false"/>
    <class name="javax.swing.JScrollBar" found="false"/>
    <class name="javax.swing.JScrollPane" found="false"/>
    <class name="javax.swing.JSeparator" found="false"/>
    <class name="javax.swing.JSlider" found="false"/>
    <class name="javax.swing.JSpinner" found="false"/>
    <class name="javax.swing.JSpinner.DateEditor" found="false"/>
    <class name="javax.swing.JSpinner.DefaultEditor" found="false"/>
    <class name="javax.swing.JSpinner.ListEditor" found="false"/>
    <class name="javax.swing.JSpinner.NumberEditor" found="false"/>
    <class name="javax.swing.JTabbedPane" found="false"/>
    <class name="javax.swing.JTable" found="false"/>
    <class name="javax.swing.JTextArea" found="false"/>
    <class name="javax.swing.JTextField" found="false"/>
    <class name="javax.swing.JTextPane" found="false"/>
    <class name="javax.swing.JToggleButton" found="false"/>
    <class name="javax.swing.JToggleButton.ToggleButtonModel" found="false"/>
    <class name="javax.swing.JTree" found="false"/>
    <class name="javax.swing.JTree.DynamicUtilTreeNode" found="false"/>
    <class name="javax.swing.JTree.EmptySelectionModel" found="false"/>
    <class name="javax.swing.JViewport" found="false"/>
    <class name="javax.swing.KeyStroke" found="false"/>
    <class name="javax.swing.LayoutFocusTraversalPolicy" found="false"/>
    <class name="javax.swing.MenuSelectionManager" found="false"/>
    <class name="javax.swing.OverlayLayout" found="false"/>
    <class name="javax.swing.ScrollPaneLayout" found="false"/>
    <class name="javax.swing.SortingFocusTraversalPolicy" found="false"/>
    <class name="javax.swing.SpinnerDateModel" found="false"/>
    <class name="javax.swing.SpinnerListModel" found="false"/>
    <class name="javax.swing.SpinnerNumberModel" found="false"/>
    <class name="javax.swing.Spring" found="false"/>
    <class name="javax.swing.SpringLayout" found="false"/>
    <class name="javax.swing.SpringLayout.Constraints" found="false"/>
    <class name="javax.swing.SwingUtilities" found="false"/>
    <class name="javax.swing.Timer" found="false"/>
    <class name="javax.swing.ViewportLayout" found="false"/>
    <class name="javax.swing.border.Border" found="false"/>
    <class name="javax.swing.border.AbstractBorder" found="false"/>
    <class name="javax.swing.border.BevelBorder" found="false"/>
    <class name="javax.swing.border.CompoundBorder" found="false"/>
    <class name="javax.swing.border.EmptyBorder" found="false"/>
    <class name="javax.swing.border.EtchedBorder" found="false"/>
    <class name="javax.swing.border.LineBorder" found="false"/>
    <class name="javax.swing.border.MatteBorder" found="false"/>
    <class name="javax.swing.border.SoftBevelBorder" found="false"/>
    <class name="javax.swing.border.TitledBorder" found="false"/>
    <class name="javax.swing.event.AncestorListener" found="false"/>
    <class name="javax.swing.event.CaretListener" found="false"/>
    <class name="javax.swing.event.ChangeListener" found="false"/>
    <class name="javax.swing.event.DocumentEvent" found="false"/>
    <class name="javax.swing.event.DocumentEvent.ElementChange" found="false"/>
    <class name="javax.swing.event.DocumentListener" found="false"/>
    <class name="javax.swing.event.HyperlinkListener" found="false"/>
    <class name="javax.swing.event.InternalFrameListener" found="false"/>
    <class name="javax.swing.event.ListDataListener" found="false"/>
    <class name="javax.swing.event.ListSelectionListener" found="false"/>
    <class name="javax.swing.event.MenuDragMouseListener" found="false"/>
    <class name="javax.swing.event.MenuKeyListener" found="false"/>
    <class name="javax.swing.event.MenuListener" found="false"/>
    <class name="javax.swing.event.MouseInputListener" found="false"/>
    <class name="javax.swing.event.PopupMenuListener" found="false"/>
    <class name="javax.swing.event.TableColumnModelListener" found="false"/>
    <class name="javax.swing.event.TableModelListener" found="false"/>
    <class name="javax.swing.event.TreeExpansionListener" found="false"/>
    <class name="javax.swing.event.TreeModelListener" found="false"/>
    <class name="javax.swing.event.TreeSelectionListener" found="false"/>
    <class name="javax.swing.event.TreeWillExpandListener" found="false"/>
    <class name="javax.swing.event.UndoableEditListener" found="false"/>
    <class name="javax.swing.event.AncestorEvent" found="false"/>
    <class name="javax.swing.event.CaretEvent" found="false"/>
    <class name="javax.swing.event.ChangeEvent" found="false"/>
    <class name="javax.swing.event.DocumentEvent.EventType" found="false"/>
    <class name="javax.swing.event.EventListenerList" found="false"/>
    <class name="javax.swing.event.HyperlinkEvent" found="false"/>
    <class name="javax.swing.event.HyperlinkEvent.EventType" found="false"/>
    <class name="javax.swing.event.InternalFrameAdapter" found="false"/>
    <class name="javax.swing.event.InternalFrameEvent" found="false"/>
    <class name="javax.swing.event.ListDataEvent" found="false"/>
    <class name="javax.swing.event.ListSelectionEvent" found="false"/>
    <class name="javax.swing.event.MenuDragMouseEvent" found="false"/>
    <class name="javax.swing.event.MenuEvent" found="false"/>
    <class name="javax.swing.event.MenuKeyEvent" found="false"/>
    <class name="javax.swing.event.MouseInputAdapter" found="false"/>
    <class name="javax.swing.event.PopupMenuEvent" found="false"/>
    <class name="javax.swing.event.SwingPropertyChangeSupport" found="false"/>
    <class name="javax.swing.event.TableColumnModelEvent" found="false"/>
    <class name="javax.swing.event.TableModelEvent" found="false"/>
    <class name="javax.swing.event.TreeExpansionEvent" found="false"/>
    <class name="javax.swing.event.TreeModelEvent" found="false"/>
    <class name="javax.swing.event.TreeSelectionEvent" found="false"/>
    <class name="javax.swing.event.UndoableEditEvent" found="false"/>
    <class name="javax.swing.plaf.ComponentUI" found="false"/>
    <class name="javax.swing.table.TableCellRenderer" found="false"/>
    <class name="javax.swing.table.TableColumnModel" found="false"/>
    <class name="javax.swing.table.TableModel" found="false"/>
    <class name="javax.swing.table.AbstractTableModel" found="false"/>
    <class name="javax.swing.table.DefaultTableColumnModel" found="false"/>
    <class name="javax.swing.table.DefaultTableModel" found="false"/>
    <class name="javax.swing.table.JTableHeader" found="false"/>
    <class name="javax.swing.table.TableColumn" found="false"/>
    <class name="javax.swing.text.AbstractDocument.AttributeContext" found="false"/>
    <class name="javax.swing.text.AbstractDocument.Content" found="false"/>
    <class name="javax.swing.text.AttributeSet" found="false"/>
    <class name="javax.swing.text.AttributeSet.CharacterAttribute" found="false"/>
    <class name="javax.swing.text.AttributeSet.ColorAttribute" found="false"/>
    <class name="javax.swing.text.AttributeSet.FontAttribute" found="false"/>
    <class name="javax.swing.text.AttributeSet.ParagraphAttribute" found="false"/>
    <class name="javax.swing.text.Caret" found="false"/>
    <class name="javax.swing.text.Document" found="false"/>
    <class name="javax.swing.text.Element" found="false"/>
    <class name="javax.swing.text.Highlighter" found="false"/>
    <class name="javax.swing.text.Highlighter.Highlight" found="false"/>
    <class name="javax.swing.text.Highlighter.HighlightPainter" found="false"/>
    <class name="javax.swing.text.Keymap" found="false"/>
    <class name="javax.swing.text.MutableAttributeSet" found="false"/>
    <class name="javax.swing.text.Position" found="false"/>
    <class name="javax.swing.text.Style" found="false"/>
    <class name="javax.swing.text.StyledDocument" found="false"/>
    <class name="javax.swing.text.TabableView" found="false"/>
    <class name="javax.swing.text.TabExpander" found="false"/>
    <class name="javax.swing.text.ViewFactory" found="false"/>
    <class name="javax.swing.text.AbstractDocument" found="false"/>
    <class name="javax.swing.text.AbstractDocument.ElementEdit" found="false"/>
    <class name="javax.swing.text.DocumentFilter" found="false"/>
    <class name="javax.swing.text.DocumentFilter.FilterBypass" found="false"/>
    <class name="javax.swing.text.EditorKit" found="false"/>
    <class name="javax.swing.text.JTextComponent" found="false"/>
    <class name="javax.swing.text.JTextComponent.KeyBinding" found="false"/>
    <class name="javax.swing.text.NavigationFilter" found="false"/>
    <class name="javax.swing.text.NavigationFilter.FilterBypass" found="false"/>
    <class name="javax.swing.text.Position.Bias" found="false"/>
    <class name="javax.swing.text.Segment" found="false"/>
    <class name="javax.swing.text.View" found="false"/>
    <class name="javax.swing.text.BadLocationException" found="false"/>
    <class name="javax.swing.tree.MutableTreeNode" found="false"/>
    <class name="javax.swing.tree.RowMapper" found="false"/>
    <class name="javax.swing.tree.TreeCellRenderer" found="false"/>
    <class name="javax.swing.tree.TreeModel" found="false"/>
    <class name="javax.swing.tree.TreeNode" found="false"/>
    <class name="javax.swing.tree.TreeSelectionModel" found="false"/>
    <class name="javax.swing.tree.DefaultMutableTreeNode" found="false"/>
    <class name="javax.swing.tree.DefaultTreeModel" found="false"/>
    <class name="javax.swing.tree.DefaultTreeSelectionModel" found="false"/>
    <class name="javax.swing.tree.TreePath" found="false"/>
    <class name="javax.swing.tree.ExpandVetoException" found="false"/>
    <class name="javax.swing.undo.StateEditable" found="false"/>
    <class name="javax.swing.undo.UndoableEdit" found="false"/>
    <class name="javax.swing.undo.AbstractUndoableEdit" found="false"/>
    <class name="javax.swing.undo.CompoundEdit" found="false"/>
    <class name="javax.swing.undo.CannotRedoException" found="false"/>
    <class name="javax.swing.undo.CannotUndoException" found="false"/>
    <result name="JSR-000209 Advanced Graphics and User Interface Optional Package for the J2ME Platform" total="339" found="12" compatibility="0.03539823"/>
  </spec>
  <spec name="JSR-000217 Personal Basis Profile 1.1.2">
    <class modifiers="public abstract interface" name="java.awt.ActiveEvent" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.Adjustable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.Composite" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.ItemSelectable" isInterface="true=">
    </class>
    <class name="java.awt.KeyEventDispatcher" found="false"/>
    <class name="java.awt.KeyEventPostProcessor" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.LayoutManager" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.LayoutManager2" interfaces="java.awt.LayoutManager" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.Transparency" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.awt.AWTEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public" name="java.awt.AWTEventMulticaster" superClass="java.lang.Object" interfaces="java.awt.event.ComponentListener,java.awt.event.ContainerListener,java.awt.event.FocusListener,java.awt.event.KeyListener,java.awt.event.MouseListener,java.awt.event.MouseMotionListener,java.awt.event.WindowListener,java.awt.event.ActionListener,java.awt.event.ItemListener,java.awt.event.AdjustmentListener,java.awt.event.TextListener">
    </class>
    <class modifiers="public final" name="java.awt.AWTPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="java.awt.BorderLayout" superClass="java.lang.Object" interfaces="java.awt.LayoutManager2,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.CardLayout" superClass="java.lang.Object" interfaces="java.awt.LayoutManager2,java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.awt.Component" superClass="java.lang.Object" interfaces="java.awt.image.ImageObserver,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.Container" superClass="java.awt.Component">
    </class>
    <class name="java.awt.ContainerOrderFocusTraversalPolicy" found="false"/>
    <class modifiers="public" name="java.awt.Cursor" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class name="java.awt.DefaultFocusTraversalPolicy" found="false"/>
    <class modifiers="public" name="java.awt.EventQueue" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.awt.FlowLayout" superClass="java.lang.Object" interfaces="java.awt.LayoutManager,java.io.Serializable">
    </class>
    <class name="java.awt.FocusTraversalPolicy" found="false"/>
    <class modifiers="public abstract" name="java.awt.FontMetrics" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.Frame" superClass="java.awt.Window">
    </class>
    <class modifiers="public abstract" name="java.awt.Graphics" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.awt.GraphicsDevice" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.awt.GraphicsEnvironment" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.awt.GridBagConstraints" superClass="java.lang.Object" interfaces="java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.GridBagLayout" superClass="java.lang.Object" interfaces="java.awt.LayoutManager2,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.awt.GridLayout" superClass="java.lang.Object" interfaces="java.awt.LayoutManager,java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.awt.Image" superClass="java.lang.Object">
    </class>
    <class name="java.awt.ImageCapabilities" found="false"/>
    <class modifiers="public" name="java.awt.Insets" superClass="java.lang.Object" interfaces="java.lang.Cloneable,java.io.Serializable">
    </class>
    <class name="java.awt.KeyboardFocusManager" found="false"/>
    <class modifiers="public" name="java.awt.MediaTracker" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.awt.SystemColor" superClass="java.awt.Color" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.awt.Toolkit" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.awt.Window" superClass="java.awt.Container">
    </class>
    <class modifiers="public" name="java.awt.AWTException" superClass="java.lang.Exception">
    </class>
    <class name="java.awt.HeadlessException" found="false"/>
    <class modifiers="public" name="java.awt.IllegalComponentStateException" superClass="java.lang.IllegalStateException">
    </class>
    <class modifiers="public" name="java.awt.AWTError" superClass="java.lang.Error">
    </class>
    <class modifiers="public abstract" name="java.awt.color.ColorSpace" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.ActionListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.AdjustmentListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.AWTEventListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.ComponentListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.ContainerListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.FocusListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class name="java.awt.event.InputMethodListener" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.event.ItemListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.KeyListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.MouseListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.event.MouseMotionListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class name="java.awt.event.MouseWheelListener" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.event.TextListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class name="java.awt.event.WindowFocusListener" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.event.WindowListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public" name="java.awt.event.ActionEvent" superClass="java.awt.AWTEvent">
    </class>
    <class modifiers="public" name="java.awt.event.AdjustmentEvent" superClass="java.awt.AWTEvent">
    </class>
    <class name="java.awt.event.AWTEventListenerProxy" found="false"/>
    <class modifiers="public abstract" name="java.awt.event.ComponentAdapter" superClass="java.lang.Object" interfaces="java.awt.event.ComponentListener">
    </class>
    <class modifiers="public" name="java.awt.event.ComponentEvent" superClass="java.awt.AWTEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.ContainerAdapter" superClass="java.lang.Object" interfaces="java.awt.event.ContainerListener">
    </class>
    <class modifiers="public" name="java.awt.event.ContainerEvent" superClass="java.awt.event.ComponentEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.FocusAdapter" superClass="java.lang.Object" interfaces="java.awt.event.FocusListener">
    </class>
    <class modifiers="public" name="java.awt.event.FocusEvent" superClass="java.awt.event.ComponentEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.InputEvent" superClass="java.awt.event.ComponentEvent">
    </class>
    <class name="java.awt.event.InputMethodEvent" found="false"/>
    <class modifiers="public" name="java.awt.event.InvocationEvent" superClass="java.awt.AWTEvent" interfaces="java.awt.ActiveEvent">
    </class>
    <class modifiers="public" name="java.awt.event.ItemEvent" superClass="java.awt.AWTEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.KeyAdapter" superClass="java.lang.Object" interfaces="java.awt.event.KeyListener">
    </class>
    <class modifiers="public" name="java.awt.event.KeyEvent" superClass="java.awt.event.InputEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.MouseAdapter" superClass="java.lang.Object" interfaces="java.awt.event.MouseListener">
    </class>
    <class modifiers="public" name="java.awt.event.MouseEvent" superClass="java.awt.event.InputEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.MouseMotionAdapter" superClass="java.lang.Object" interfaces="java.awt.event.MouseMotionListener">
    </class>
    <class name="java.awt.event.MouseWheelEvent" found="false"/>
    <class modifiers="public" name="java.awt.event.PaintEvent" superClass="java.awt.event.ComponentEvent">
    </class>
    <class modifiers="public" name="java.awt.event.TextEvent" superClass="java.awt.AWTEvent">
    </class>
    <class modifiers="public abstract" name="java.awt.event.WindowAdapter" superClass="java.lang.Object" interfaces="java.awt.event.WindowListener">
    </class>
    <class modifiers="public" name="java.awt.event.WindowEvent" superClass="java.awt.event.ComponentEvent">
    </class>
    <class name="java.awt.font.TextHitInfo" found="false"/>
    <class name="java.awt.im.InputMethodRequests" found="false"/>
    <class name="java.awt.im.InputContext" found="false"/>
    <class name="java.awt.im.InputMethodHighlight" found="false"/>
    <class name="java.awt.im.InputSubset" found="false"/>
    <class modifiers="public abstract interface" name="java.awt.image.ImageConsumer" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.image.ImageObserver" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.awt.image.ImageProducer" isInterface="true=">
    </class>
    <class modifiers="public" name="java.awt.image.AreaAveragingScaleFilter" superClass="java.awt.image.ReplicateScaleFilter">
    </class>
    <class modifiers="public abstract" name="java.awt.image.ColorModel" superClass="java.lang.Object" interfaces="java.awt.Transparency">
    </class>
    <class modifiers="public" name="java.awt.image.CropImageFilter" superClass="java.awt.image.ImageFilter">
    </class>
    <class modifiers="public" name="java.awt.image.DirectColorModel" superClass="java.awt.image.ColorModel">
    </class>
    <class modifiers="public" name="java.awt.image.FilteredImageSource" superClass="java.lang.Object" interfaces="java.awt.image.ImageProducer">
    </class>
    <class modifiers="public" name="java.awt.image.ImageFilter" superClass="java.lang.Object" interfaces="java.awt.image.ImageConsumer,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.awt.image.IndexColorModel" superClass="java.awt.image.ColorModel">
    </class>
    <class modifiers="public" name="java.awt.image.MemoryImageSource" superClass="java.lang.Object" interfaces="java.awt.image.ImageProducer">
    </class>
    <class modifiers="public" name="java.awt.image.PixelGrabber" superClass="java.lang.Object" interfaces="java.awt.image.ImageConsumer">
    </class>
    <class modifiers="public" name="java.awt.image.ReplicateScaleFilter" superClass="java.awt.image.ImageFilter">
    </class>
    <class modifiers="public abstract" name="java.awt.image.RGBImageFilter" superClass="java.awt.image.ImageFilter">
    </class>
    <class name="java.awt.image.VolatileImage" found="false"/>
    <class modifiers="public" name="java.awt.image.RasterFormatException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public abstract interface" name="java.beans.PropertyChangeListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.beans.VetoableChangeListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.beans.Visibility" isInterface="true=">
    </class>
    <class modifiers="public" name="java.beans.Beans" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.beans.PropertyChangeEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public" name="java.beans.PropertyChangeSupport" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.beans.VetoableChangeSupport" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.beans.PropertyVetoException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="java.io.Externalizable" interfaces="java.io.Serializable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.FileFilter" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.FilenameFilter" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.ObjectInput" interfaces="java.io.DataInput" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.ObjectInputValidation" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.ObjectOutput" interfaces="java.io.DataOutput" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.ObjectStreamConstants" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.io.Serializable" isInterface="true=">
    </class>
    <class modifiers="public" name="java.io.BufferedInputStream" superClass="java.io.FilterInputStream">
    </class>
    <class modifiers="public" name="java.io.BufferedOutputStream" superClass="java.io.FilterOutputStream">
    </class>
    <class modifiers="public" name="java.io.BufferedReader" superClass="java.io.Reader">
    </class>
    <class modifiers="public" name="java.io.BufferedWriter" superClass="java.io.Writer">
    </class>
    <class modifiers="public" name="java.io.CharArrayReader" superClass="java.io.Reader">
    </class>
    <class modifiers="public" name="java.io.CharArrayWriter" superClass="java.io.Writer">
    </class>
    <class modifiers="public" name="java.io.File" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Comparable">
    </class>
    <class modifiers="public final" name="java.io.FileDescriptor" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.io.FileInputStream" superClass="java.io.InputStream">
    </class>
    <class modifiers="public" name="java.io.FileOutputStream" superClass="java.io.OutputStream">
    </class>
    <class modifiers="public final" name="java.io.FilePermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.io.FileReader" superClass="java.io.InputStreamReader">
    </class>
    <class modifiers="public" name="java.io.FileWriter" superClass="java.io.OutputStreamWriter">
    </class>
    <class modifiers="public" name="java.io.FilterInputStream" superClass="java.io.InputStream">
    </class>
    <class modifiers="public" name="java.io.FilterOutputStream" superClass="java.io.OutputStream">
    </class>
    <class modifiers="public abstract" name="java.io.FilterReader" superClass="java.io.Reader">
    </class>
    <class modifiers="public abstract" name="java.io.FilterWriter" superClass="java.io.Writer">
    </class>
    <class modifiers="public" name="java.io.LineNumberReader" superClass="java.io.BufferedReader">
    </class>
    <class modifiers="public" name="java.io.ObjectInputStream" superClass="java.io.InputStream" interfaces="java.io.ObjectInput,java.io.ObjectStreamConstants">
    </class>
    <class modifiers="public" name="java.io.ObjectOutputStream" superClass="java.io.OutputStream" interfaces="java.io.ObjectOutput,java.io.ObjectStreamConstants">
    </class>
    <class modifiers="public" name="java.io.ObjectStreamClass" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.io.ObjectStreamField" superClass="java.lang.Object" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public abstract interface" name="java.lang.CharSequence" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.lang.Cloneable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.lang.Comparable" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.lang.ClassLoader" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.Compiler" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.InheritableThreadLocal" superClass="java.lang.ThreadLocal">
    </class>
    <class modifiers="public abstract" name="java.lang.Number" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.lang.Package" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.lang.Process" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.RuntimePermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="java.lang.SecurityManager" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.StackTraceElement" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.lang.StrictMath" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.ThreadGroup" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.ThreadLocal" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.Void" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.CloneNotSupportedException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.IllegalStateException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.lang.NoSuchFieldException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.NoSuchMethodException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.AbstractMethodError" superClass="java.lang.IncompatibleClassChangeError">
    </class>
    <class modifiers="public" name="java.lang.AssertionError" superClass="java.lang.Error">
    </class>
    <class modifiers="public" name="java.lang.ClassCircularityError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.ClassFormatError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.ExceptionInInitializerError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.IllegalAccessError" superClass="java.lang.IncompatibleClassChangeError">
    </class>
    <class modifiers="public" name="java.lang.IncompatibleClassChangeError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.InstantiationError" superClass="java.lang.IncompatibleClassChangeError">
    </class>
    <class modifiers="public" name="java.lang.InternalError" superClass="java.lang.VirtualMachineError">
    </class>
    <class modifiers="public" name="java.lang.LinkageError" superClass="java.lang.Error">
    </class>
    <class modifiers="public" name="java.lang.NoSuchFieldError" superClass="java.lang.IncompatibleClassChangeError">
    </class>
    <class modifiers="public" name="java.lang.NoSuchMethodError" superClass="java.lang.IncompatibleClassChangeError">
    </class>
    <class modifiers="public" name="java.lang.StackOverflowError" superClass="java.lang.VirtualMachineError">
    </class>
    <class modifiers="public" name="java.lang.ThreadDeath" superClass="java.lang.Error">
    </class>
    <class modifiers="public" name="java.lang.UnknownError" superClass="java.lang.VirtualMachineError">
    </class>
    <class modifiers="public" name="java.lang.UnsatisfiedLinkError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.UnsupportedClassVersionError" superClass="java.lang.ClassFormatError">
    </class>
    <class modifiers="public" name="java.lang.VerifyError" superClass="java.lang.LinkageError">
    </class>
    <class modifiers="public" name="java.lang.ref.PhantomReference" superClass="java.lang.ref.Reference">
    </class>
    <class modifiers="public" name="java.lang.ref.ReferenceQueue" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.ref.SoftReference" superClass="java.lang.ref.Reference">
    </class>
    <class modifiers="public abstract interface" name="java.lang.reflect.InvocationHandler" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.lang.reflect.Member" isInterface="true=">
    </class>
    <class modifiers="public" name="java.lang.reflect.AccessibleObject" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.reflect.Array" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.lang.reflect.Constructor" superClass="java.lang.reflect.AccessibleObject" interfaces="java.lang.reflect.Member">
    </class>
    <class modifiers="public final" name="java.lang.reflect.Field" superClass="java.lang.reflect.AccessibleObject" interfaces="java.lang.reflect.Member">
    </class>
    <class modifiers="public final" name="java.lang.reflect.Method" superClass="java.lang.reflect.AccessibleObject" interfaces="java.lang.reflect.Member">
    </class>
    <class modifiers="public" name="java.lang.reflect.Modifier" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.lang.reflect.Proxy" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.lang.reflect.ReflectPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="java.lang.reflect.InvocationTargetException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.lang.reflect.UndeclaredThrowableException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.math.BigDecimal" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public" name="java.math.BigInteger" superClass="java.lang.Number" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public abstract interface" name="java.net.ContentHandlerFactory" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.net.DatagramSocketImplFactory" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.net.FileNameMap" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.net.SocketImplFactory" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.net.SocketOptions" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.net.URLStreamHandlerFactory" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.net.Authenticator" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.net.ContentHandler" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.net.DatagramPacket" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.DatagramSocket" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.net.DatagramSocketImpl" superClass="java.lang.Object" interfaces="java.net.SocketOptions">
    </class>
    <class modifiers="public abstract" name="java.net.HttpURLConnection" superClass="java.net.URLConnection">
    </class>
    <class modifiers="public final" name="java.net.Inet4Address" superClass="java.net.InetAddress">
    </class>
    <class modifiers="public final" name="java.net.Inet6Address" superClass="java.net.InetAddress">
    </class>
    <class modifiers="public" name="java.net.InetAddress" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.net.InetSocketAddress" superClass="java.net.SocketAddress">
    </class>
    <class modifiers="public abstract" name="java.net.JarURLConnection" superClass="java.net.URLConnection">
    </class>
    <class modifiers="public" name="java.net.MulticastSocket" superClass="java.net.DatagramSocket">
    </class>
    <class modifiers="public final" name="java.net.NetPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public final" name="java.net.NetworkInterface" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.net.PasswordAuthentication" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.ServerSocket" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.Socket" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.net.SocketAddress" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.net.SocketImpl" superClass="java.lang.Object" interfaces="java.net.SocketOptions">
    </class>
    <class modifiers="public final" name="java.net.SocketPermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.net.URI" superClass="java.lang.Object" interfaces="java.lang.Comparable,java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.net.URL" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.net.URLClassLoader" superClass="java.security.SecureClassLoader">
    </class>
    <class modifiers="public abstract" name="java.net.URLConnection" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.URLDecoder" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.URLEncoder" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.net.URLStreamHandler" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.net.BindException" superClass="java.net.SocketException">
    </class>
    <class modifiers="public" name="java.net.ConnectException" superClass="java.net.SocketException">
    </class>
    <class modifiers="public" name="java.net.MalformedURLException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.net.NoRouteToHostException" superClass="java.net.SocketException">
    </class>
    <class modifiers="public" name="java.net.PortUnreachableException" superClass="java.net.SocketException">
    </class>
    <class modifiers="public" name="java.net.ProtocolException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.net.SocketException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.net.SocketTimeoutException" superClass="java.io.InterruptedIOException">
    </class>
    <class modifiers="public" name="java.net.UnknownHostException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.net.UnknownServiceException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.net.URISyntaxException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.rmi.AccessException" superClass="java.rmi.RemoteException">
    </class>
    <class modifiers="public" name="java.rmi.AlreadyBoundException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.rmi.NotBoundException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.rmi.UnexpectedException" superClass="java.rmi.RemoteException">
    </class>
    <class modifiers="public abstract interface" name="java.rmi.registry.Registry" interfaces="java.rmi.Remote" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.Certificate" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.DomainCombiner" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.Guard" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.Principal" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.PrivateKey" interfaces="java.security.Key" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.PrivilegedAction" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.PrivilegedExceptionAction" isInterface="true=">
    </class>
    <class modifiers="public final" name="java.security.AccessControlContext" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.security.AccessController" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.security.AlgorithmParameterGenerator" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.AlgorithmParameterGeneratorSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.security.AlgorithmParameters" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.AlgorithmParametersSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.security.AllPermission" superClass="java.security.Permission">
    </class>
    <class modifiers="public abstract" name="java.security.BasicPermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.security.CodeSource" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.security.DigestInputStream" superClass="java.io.FilterInputStream">
    </class>
    <class modifiers="public" name="java.security.DigestOutputStream" superClass="java.io.FilterOutputStream">
    </class>
    <class modifiers="public" name="java.security.GuardedObject" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.Identity" superClass="java.lang.Object" interfaces="java.security.Principal,java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.IdentityScope" superClass="java.security.Identity">
    </class>
    <class modifiers="public abstract" name="java.security.KeyFactorySpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.security.KeyPair" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.KeyPairGenerator" superClass="java.security.KeyPairGeneratorSpi">
    </class>
    <class modifiers="public abstract" name="java.security.KeyPairGeneratorSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.security.KeyStore" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.KeyStoreSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.MessageDigestSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.Permission" superClass="java.lang.Object" interfaces="java.security.Guard,java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.PermissionCollection" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.security.Permissions" superClass="java.security.PermissionCollection" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.Policy" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.security.ProtectionDomain" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.Provider" superClass="java.util.Properties">
    </class>
    <class modifiers="public" name="java.security.SecureClassLoader" superClass="java.lang.ClassLoader">
    </class>
    <class modifiers="public" name="java.security.SecureRandom" superClass="java.util.Random">
    </class>
    <class modifiers="public abstract" name="java.security.SecureRandomSpi" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public final" name="java.security.Security" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.security.SecurityPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public abstract" name="java.security.SignatureSpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.security.SignedObject" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.Signer" superClass="java.security.Identity">
    </class>
    <class modifiers="public final" name="java.security.UnresolvedPermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.security.AccessControlException" superClass="java.lang.SecurityException">
    </class>
    <class modifiers="public" name="java.security.InvalidParameterException" superClass="java.lang.IllegalArgumentException">
    </class>
    <class modifiers="public" name="java.security.KeyManagementException" superClass="java.security.KeyException">
    </class>
    <class modifiers="public" name="java.security.KeyStoreException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.NoSuchProviderException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.PrivilegedActionException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.security.ProviderException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.security.UnrecoverableKeyException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public abstract interface" name="java.security.acl.Acl" interfaces="java.security.acl.Owner" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.acl.AclEntry" interfaces="java.lang.Cloneable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.acl.Group" interfaces="java.security.Principal" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.acl.Owner" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.acl.Permission" isInterface="true=">
    </class>
    <class modifiers="public" name="java.security.acl.AclNotFoundException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.security.acl.LastOwnerException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.security.acl.NotOwnerException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="java.security.cert.X509Extension" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.security.cert.Certificate" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateFactory" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.cert.CertificateFactorySpi" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.cert.CertPath" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.security.cert.CRL" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.security.cert.X509Certificate" superClass="java.security.cert.Certificate" interfaces="java.security.cert.X509Extension">
    </class>
    <class modifiers="public abstract" name="java.security.cert.X509CRL" superClass="java.security.cert.CRL" interfaces="java.security.cert.X509Extension">
    </class>
    <class modifiers="public abstract" name="java.security.cert.X509CRLEntry" superClass="java.lang.Object" interfaces="java.security.cert.X509Extension">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateEncodingException" superClass="java.security.cert.CertificateException">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateExpiredException" superClass="java.security.cert.CertificateException">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateNotYetValidException" superClass="java.security.cert.CertificateException">
    </class>
    <class modifiers="public" name="java.security.cert.CertificateParsingException" superClass="java.security.cert.CertificateException">
    </class>
    <class modifiers="public" name="java.security.cert.CRLException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.DSAKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.DSAKeyPairGenerator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.DSAParams" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.DSAPrivateKey" interfaces="java.security.interfaces.DSAKey,java.security.PrivateKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.DSAPublicKey" interfaces="java.security.interfaces.DSAKey,java.security.PublicKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.RSAKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.RSAPrivateCrtKey" interfaces="java.security.interfaces.RSAPrivateKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.RSAPrivateKey" interfaces="java.security.PrivateKey,java.security.interfaces.RSAKey" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.security.interfaces.RSAPublicKey" interfaces="java.security.PublicKey,java.security.interfaces.RSAKey" isInterface="true=">
    </class>
    <class modifiers="public" name="java.security.spec.DSAParameterSpec" superClass="java.lang.Object" interfaces="java.security.spec.AlgorithmParameterSpec,java.security.interfaces.DSAParams">
    </class>
    <class modifiers="public" name="java.security.spec.DSAPrivateKeySpec" superClass="java.lang.Object" interfaces="java.security.spec.KeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.DSAPublicKeySpec" superClass="java.lang.Object" interfaces="java.security.spec.KeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.PKCS8EncodedKeySpec" superClass="java.security.spec.EncodedKeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.PSSParameterSpec" superClass="java.lang.Object" interfaces="java.security.spec.AlgorithmParameterSpec">
    </class>
    <class modifiers="public" name="java.security.spec.RSAKeyGenParameterSpec" superClass="java.lang.Object" interfaces="java.security.spec.AlgorithmParameterSpec">
    </class>
    <class modifiers="public" name="java.security.spec.RSAPrivateCrtKeySpec" superClass="java.security.spec.RSAPrivateKeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.RSAPrivateKeySpec" superClass="java.lang.Object" interfaces="java.security.spec.KeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.RSAPublicKeySpec" superClass="java.lang.Object" interfaces="java.security.spec.KeySpec">
    </class>
    <class modifiers="public" name="java.security.spec.InvalidParameterSpecException" superClass="java.security.GeneralSecurityException">
    </class>
    <class modifiers="public abstract interface" name="java.text.AttributedCharacterIterator" interfaces="java.text.CharacterIterator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.text.CharacterIterator" interfaces="java.lang.Cloneable" isInterface="true=">
    </class>
    <class modifiers="public" name="java.text.Annotation" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.text.AttributedString" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.text.BreakIterator" superClass="java.lang.Object" interfaces="java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.text.ChoiceFormat" superClass="java.text.NumberFormat">
    </class>
    <class modifiers="public final" name="java.text.CollationElementIterator" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.text.CollationKey" superClass="java.lang.Object" interfaces="java.lang.Comparable">
    </class>
    <class modifiers="public abstract" name="java.text.Collator" superClass="java.lang.Object" interfaces="java.util.Comparator,java.lang.Cloneable">
    </class>
    <class modifiers="public abstract" name="java.text.DateFormat" superClass="java.text.Format">
    </class>
    <class modifiers="public" name="java.text.DateFormatSymbols" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.text.DecimalFormat" superClass="java.text.NumberFormat">
    </class>
    <class modifiers="public final" name="java.text.DecimalFormatSymbols" superClass="java.lang.Object" interfaces="java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.text.FieldPosition" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.text.Format" superClass="java.lang.Object" interfaces="java.io.Serializable,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.text.MessageFormat" superClass="java.text.Format">
    </class>
    <class modifiers="public abstract" name="java.text.NumberFormat" superClass="java.text.Format">
    </class>
    <class modifiers="public" name="java.text.ParsePosition" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.text.RuleBasedCollator" superClass="java.text.Collator">
    </class>
    <class modifiers="public" name="java.text.SimpleDateFormat" superClass="java.text.DateFormat">
    </class>
    <class modifiers="public final" name="java.text.StringCharacterIterator" superClass="java.lang.Object" interfaces="java.text.CharacterIterator">
    </class>
    <class modifiers="public" name="java.text.ParseException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="java.util.Collection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.Comparator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.Iterator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.List" interfaces="java.util.Collection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.ListIterator" interfaces="java.util.Iterator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.Map" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.Observer" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.RandomAccess" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.Set" interfaces="java.util.Collection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.SortedMap" interfaces="java.util.Map" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="java.util.SortedSet" interfaces="java.util.Set" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="java.util.AbstractCollection" superClass="java.lang.Object" interfaces="java.util.Collection">
    </class>
    <class modifiers="public abstract" name="java.util.AbstractList" superClass="java.util.AbstractCollection" interfaces="java.util.List">
    </class>
    <class modifiers="public abstract" name="java.util.AbstractMap" superClass="java.lang.Object" interfaces="java.util.Map">
    </class>
    <class modifiers="public abstract" name="java.util.AbstractSequentialList" superClass="java.util.AbstractList">
    </class>
    <class modifiers="public abstract" name="java.util.AbstractSet" superClass="java.util.AbstractCollection" interfaces="java.util.Set">
    </class>
    <class modifiers="public" name="java.util.ArrayList" superClass="java.util.AbstractList" interfaces="java.util.List,java.util.RandomAccess,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.Arrays" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.util.BitSet" superClass="java.lang.Object" interfaces="java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.Collections" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="java.util.Currency" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.util.Dictionary" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.util.EventListenerProxy" superClass="java.lang.Object" interfaces="java.util.EventListener">
    </class>
    <class modifiers="public" name="java.util.EventObject" superClass="java.lang.Object" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.GregorianCalendar" superClass="java.util.Calendar">
    </class>
    <class modifiers="public" name="java.util.HashMap" superClass="java.util.AbstractMap" interfaces="java.util.Map,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.HashSet" superClass="java.util.AbstractSet" interfaces="java.util.Set,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.IdentityHashMap" superClass="java.util.AbstractMap" interfaces="java.util.Map,java.io.Serializable,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.LinkedHashMap" superClass="java.util.HashMap">
    </class>
    <class modifiers="public" name="java.util.LinkedHashSet" superClass="java.util.HashSet" interfaces="java.util.Set,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.LinkedList" superClass="java.util.AbstractSequentialList" interfaces="java.util.List,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public abstract" name="java.util.ListResourceBundle" superClass="java.util.ResourceBundle">
    </class>
    <class modifiers="public final" name="java.util.Locale" superClass="java.lang.Object" interfaces="java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.Observable" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.util.Properties" superClass="java.util.Hashtable">
    </class>
    <class modifiers="public final" name="java.util.PropertyPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="java.util.PropertyResourceBundle" superClass="java.util.ResourceBundle">
    </class>
    <class modifiers="public abstract" name="java.util.ResourceBundle" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.util.SimpleTimeZone" superClass="java.util.TimeZone">
    </class>
    <class modifiers="public" name="java.util.StringTokenizer" superClass="java.lang.Object" interfaces="java.util.Enumeration">
    </class>
    <class modifiers="public" name="java.util.Timer" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="java.util.TimerTask" superClass="java.lang.Object" interfaces="java.lang.Runnable">
    </class>
    <class modifiers="public" name="java.util.TreeMap" superClass="java.util.AbstractMap" interfaces="java.util.SortedMap,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.TreeSet" superClass="java.util.AbstractSet" interfaces="java.util.SortedSet,java.lang.Cloneable,java.io.Serializable">
    </class>
    <class modifiers="public" name="java.util.WeakHashMap" superClass="java.util.AbstractMap" interfaces="java.util.Map">
    </class>
    <class modifiers="public" name="java.util.ConcurrentModificationException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.util.MissingResourceException" superClass="java.lang.RuntimeException">
    </class>
    <class modifiers="public" name="java.util.TooManyListenersException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.util.jar.Attributes" superClass="java.lang.Object" interfaces="java.util.Map,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.jar.JarEntry" superClass="java.util.zip.ZipEntry">
    </class>
    <class modifiers="public" name="java.util.jar.JarFile" superClass="java.util.zip.ZipFile">
    </class>
    <class modifiers="public" name="java.util.jar.JarInputStream" superClass="java.util.zip.ZipInputStream">
    </class>
    <class modifiers="public" name="java.util.jar.JarOutputStream" superClass="java.util.zip.ZipOutputStream">
    </class>
    <class modifiers="public" name="java.util.jar.Manifest" superClass="java.lang.Object" interfaces="java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.jar.JarException" superClass="java.util.zip.ZipException">
    </class>
    <class modifiers="public abstract interface" name="java.util.zip.Checksum" isInterface="true=">
    </class>
    <class modifiers="public" name="java.util.zip.Adler32" superClass="java.lang.Object" interfaces="java.util.zip.Checksum">
    </class>
    <class modifiers="public" name="java.util.zip.CheckedInputStream" superClass="java.io.FilterInputStream">
    </class>
    <class modifiers="public" name="java.util.zip.CheckedOutputStream" superClass="java.io.FilterOutputStream">
    </class>
    <class modifiers="public" name="java.util.zip.CRC32" superClass="java.lang.Object" interfaces="java.util.zip.Checksum">
    </class>
    <class modifiers="public" name="java.util.zip.Deflater" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.util.zip.DeflaterOutputStream" superClass="java.io.FilterOutputStream">
    </class>
    <class modifiers="public" name="java.util.zip.GZIPInputStream" superClass="java.util.zip.InflaterInputStream">
    </class>
    <class modifiers="public" name="java.util.zip.GZIPOutputStream" superClass="java.util.zip.DeflaterOutputStream">
    </class>
    <class modifiers="public" name="java.util.zip.Inflater" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.util.zip.InflaterInputStream" superClass="java.io.FilterInputStream">
    </class>
    <class modifiers="public" name="java.util.zip.ZipEntry" superClass="java.lang.Object" interfaces="java.util.zip.ZipConstants,java.lang.Cloneable">
    </class>
    <class modifiers="public" name="java.util.zip.ZipFile" superClass="java.lang.Object" interfaces="java.util.zip.ZipConstants">
    </class>
    <class modifiers="public" name="java.util.zip.ZipInputStream" superClass="java.util.zip.InflaterInputStream" interfaces="java.util.zip.ZipConstants">
    </class>
    <class modifiers="public" name="java.util.zip.ZipOutputStream" superClass="java.util.zip.DeflaterOutputStream" interfaces="java.util.zip.ZipConstants">
    </class>
    <class modifiers="public" name="java.util.zip.DataFormatException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="java.util.zip.ZipException" superClass="java.io.IOException">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.CommConnection" interfaces="javax.microedition.io.StreamConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.HttpConnection" interfaces="javax.microedition.io.ContentConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.HttpsConnection" interfaces="javax.microedition.io.HttpConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.SecureConnection" interfaces="javax.microedition.io.SocketConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.SecurityInfo" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.ServerSocketConnection" interfaces="javax.microedition.io.StreamConnectionNotifier" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.SocketConnection" interfaces="javax.microedition.io.StreamConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.io.UDPDatagramConnection" interfaces="javax.microedition.io.DatagramConnection" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.pki.Certificate" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.microedition.pki.CertificateException" superClass="java.io.IOException">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.xlet.Xlet" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.microedition.xlet.XletContext" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.microedition.xlet.UnavailableContainerException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="javax.microedition.xlet.XletStateChangeException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public final" name="javax.microedition.xlet.ixc.IxcPermission" superClass="java.security.Permission">
    </class>
    <class modifiers="public abstract" name="javax.microedition.xlet.ixc.IxcRegistry" superClass="java.lang.Object" interfaces="java.rmi.registry.Registry">
    </class>
    <class modifiers="public" name="javax.microedition.xlet.ixc.StubException" superClass="java.rmi.RemoteException">
    </class>
    <class modifiers="public final" name="javax.security.auth.x500.X500Principal" superClass="java.lang.Object" interfaces="java.security.Principal,java.io.Serializable">
    </class>
    <result name="JSR-000217 Personal Basis Profile 1.1.2" total="557" found="533" compatibility="0.95691204"/>
  </spec>
  <spec name="JSR-000218 Connected Device Configuration 1.1.2">
    <class modifiers="public" name="java.io.PipedInputStream" superClass="java.io.InputStream">
    </class>
    <class modifiers="public" name="java.io.PipedOutputStream" superClass="java.io.OutputStream">
    </class>
    <class modifiers="public" name="java.io.PrintWriter" superClass="java.io.Writer">
    </class>
    <class modifiers="public" name="java.io.PushbackInputStream" superClass="java.io.FilterInputStream">
    </class>
    <class modifiers="public final" name="java.io.SerializablePermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="java.io.StreamTokenizer" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="java.io.CharConversionException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.FileNotFoundException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.InvalidClassException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public" name="java.io.InvalidObjectException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public" name="java.io.NotActiveException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public" name="java.io.NotSerializableException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public abstract" name="java.io.ObjectStreamException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.OptionalDataException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public" name="java.io.StreamCorruptedException" superClass="java.io.ObjectStreamException">
    </class>
    <class modifiers="public" name="java.io.SyncFailedException" superClass="java.io.IOException">
    </class>
    <class modifiers="public" name="java.io.WriteAbortedException" superClass="java.io.ObjectStreamException">
    </class>
    <result name="JSR-000218 Connected Device Configuration 1.1.2" total="321" found="321" compatibility="1.0"/>
  </spec>
  <spec name="JSR-000280 XML API for Java ME">
    <class name="javax.xml.XMLConstants" found="false"/>
    <class name="javax.xml.parsers.DocumentBuilder" found="false"/>
    <class name="javax.xml.parsers.DocumentBuilderFactory" found="false"/>
    <class name="javax.xml.stream.DTDStreamReader" found="false"/>
    <class name="javax.xml.stream.Location" found="false"/>
    <class name="javax.xml.stream.StreamFilter" found="false"/>
    <class name="javax.xml.stream.XMLResolver" found="false"/>
    <class name="javax.xml.stream.XMLStreamConstants" found="false"/>
    <class name="javax.xml.stream.XMLStreamReader" found="false"/>
    <class name="javax.xml.stream.XMLStreamWriter" found="false"/>
    <class name="javax.xml.stream.XMLInputFactory" found="false"/>
    <class name="javax.xml.stream.XMLOutputFactory" found="false"/>
    <class name="javax.xml.stream.XMLStreamException" found="false"/>
    <class name="javax.xml.stream.FactoryConfigurationError" found="false"/>
    <class name="org.w3c.dom.Attr" found="false"/>
    <class name="org.w3c.dom.CDATASection" found="false"/>
    <class name="org.w3c.dom.CharacterData" found="false"/>
    <class name="org.w3c.dom.Comment" found="false"/>
    <class name="org.w3c.dom.Document" found="false"/>
    <class name="org.w3c.dom.DocumentFragment" found="false"/>
    <class name="org.w3c.dom.DocumentType" found="false"/>
    <class name="org.w3c.dom.DOMImplementation" found="false"/>
    <class name="org.w3c.dom.Element" found="false"/>
    <class name="org.w3c.dom.ElementTraversal" found="false"/>
    <class name="org.w3c.dom.Entity" found="false"/>
    <class name="org.w3c.dom.EntityReference" found="false"/>
    <class name="org.w3c.dom.NamedNodeMap" found="false"/>
    <class name="org.w3c.dom.Node" found="false"/>
    <class name="org.w3c.dom.NodeList" found="false"/>
    <class name="org.w3c.dom.Notation" found="false"/>
    <class name="org.w3c.dom.ProcessingInstruction" found="false"/>
    <class name="org.w3c.dom.Text" found="false"/>
    <class name="org.w3c.dom.UserDataHandler" found="false"/>
    <class name="org.w3c.dom.DOMException" found="false"/>
    <class name="org.w3c.dom.events.CustomEvent" found="false"/>
    <class name="org.w3c.dom.events.DocumentEvent" found="false"/>
    <class name="org.w3c.dom.events.Event" found="false"/>
    <class name="org.w3c.dom.events.EventListener" found="false"/>
    <class name="org.w3c.dom.events.EventTarget" found="false"/>
    <class name="org.w3c.dom.events.KeyboardEvent" found="false"/>
    <class name="org.w3c.dom.events.MouseEvent" found="false"/>
    <class name="org.w3c.dom.events.MouseWheelEvent" found="false"/>
    <class name="org.w3c.dom.events.MutationEvent" found="false"/>
    <class name="org.w3c.dom.events.ProgressEvent" found="false"/>
    <class name="org.w3c.dom.events.TextEvent" found="false"/>
    <class name="org.w3c.dom.events.UIEvent" found="false"/>
    <class name="org.w3c.dom.events.EventException" found="false"/>
    <class name="org.w3c.dom.views.AbstractView" found="false"/>
    <class name="org.w3c.dom.views.DocumentView" found="false"/>
    <class name="org.xml.sax.ContentHandler" found="false"/>
    <class name="org.xml.sax.DTDHandler" found="false"/>
    <class name="org.xml.sax.EntityResolver" found="false"/>
    <class name="org.xml.sax.ErrorHandler" found="false"/>
    <class name="org.xml.sax.XMLFilter" found="false"/>
    <class name="org.xml.sax.XMLReader" found="false"/>
    <class name="org.xml.sax.ext.Attributes2" found="false"/>
    <result name="JSR-000280 XML API for Java ME" total="68" found="12" compatibility="0.1764706"/>
  </spec>
  <spec name="JSR-000927 JavaTM TV API 1.1.1">
    <class modifiers="public abstract interface" name="javax.media.CachingControl" interfaces="javax.media.Control" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.Clock" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.Control" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.Controller" interfaces="javax.media.Clock,javax.media.Duration" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.ControllerListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.Duration" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.GainChangeListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.GainControl" interfaces="javax.media.Control" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.MediaEvent" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.MediaHandler" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.MediaProxy" interfaces="javax.media.MediaHandler" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.Player" interfaces="javax.media.MediaHandler,javax.media.Controller" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.TimeBase" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.media.CachingControlEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.ConnectionErrorEvent" superClass="javax.media.ControllerErrorEvent">
    </class>
    <class modifiers="public" name="javax.media.ControllerClosedEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.ControllerErrorEvent" superClass="javax.media.ControllerClosedEvent">
    </class>
    <class modifiers="public" name="javax.media.ControllerEvent" superClass="java.util.EventObject" interfaces="javax.media.MediaEvent">
    </class>
    <class modifiers="public" name="javax.media.DataStarvedEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.DeallocateEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.DurationUpdateEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.EndOfMediaEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.GainChangeEvent" superClass="java.util.EventObject" interfaces="javax.media.MediaEvent">
    </class>
    <class modifiers="public" name="javax.media.InternalErrorEvent" superClass="javax.media.ControllerErrorEvent">
    </class>
    <class modifiers="public final" name="javax.media.Manager" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.media.MediaLocator" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.media.MediaTimeSetEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.PackageManager" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.media.PrefetchCompleteEvent" superClass="javax.media.TransitionEvent">
    </class>
    <class modifiers="public" name="javax.media.RateChangeEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.RealizeCompleteEvent" superClass="javax.media.TransitionEvent">
    </class>
    <class modifiers="public" name="javax.media.ResourceUnavailableEvent" superClass="javax.media.ControllerErrorEvent">
    </class>
    <class modifiers="public" name="javax.media.RestartingEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.StartEvent" superClass="javax.media.TransitionEvent">
    </class>
    <class modifiers="public" name="javax.media.StopAtTimeEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.StopByRequestEvent" superClass="javax.media.StopEvent">
    </class>
    <class modifiers="public" name="javax.media.StopEvent" superClass="javax.media.TransitionEvent">
    </class>
    <class modifiers="public" name="javax.media.StopTimeChangeEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.Time" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.media.TransitionEvent" superClass="javax.media.ControllerEvent">
    </class>
    <class modifiers="public" name="javax.media.ClockStoppedException" superClass="javax.media.MediaException">
    </class>
    <class modifiers="public" name="javax.media.IncompatibleSourceException" superClass="javax.media.MediaException">
    </class>
    <class modifiers="public" name="javax.media.IncompatibleTimeBaseException" superClass="javax.media.MediaException">
    </class>
    <class modifiers="public" name="javax.media.MediaException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="javax.media.NoDataSourceException" superClass="javax.media.MediaException">
    </class>
    <class modifiers="public" name="javax.media.NoPlayerException" superClass="javax.media.MediaException">
    </class>
    <class modifiers="public" name="javax.media.ClockStartedError" superClass="javax.media.MediaError">
    </class>
    <class modifiers="public" name="javax.media.MediaError" superClass="java.lang.Error">
    </class>
    <class modifiers="public" name="javax.media.NotPrefetchedError" superClass="javax.media.MediaError">
    </class>
    <class modifiers="public" name="javax.media.NotRealizedError" superClass="javax.media.MediaError">
    </class>
    <class modifiers="public" name="javax.media.StopTimeSetError" superClass="javax.media.MediaError">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.Controls" interfaces="javax.media.Controls" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.Positionable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.PullSourceStream" interfaces="javax.media.protocol.SourceStream" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.PushSourceStream" interfaces="javax.media.protocol.SourceStream" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.RateConfiguration" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.RateConfigureable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.Seekable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.SourceStream" interfaces="javax.media.protocol.Controls" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.media.protocol.SourceTransferHandler" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.media.protocol.ContentDescriptor" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="javax.media.protocol.DataSource" superClass="java.lang.Object" interfaces="javax.media.protocol.Controls,javax.media.Duration">
    </class>
    <class modifiers="public abstract" name="javax.media.protocol.PullDataSource" superClass="javax.media.protocol.DataSource">
    </class>
    <class modifiers="public abstract" name="javax.media.protocol.PushDataSource" superClass="javax.media.protocol.DataSource">
    </class>
    <class modifiers="public" name="javax.media.protocol.RateRange" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.media.protocol.URLDataSource" superClass="javax.media.protocol.PullDataSource">
    </class>
    <class modifiers="public" name="javax.tv.graphics.AlphaColor" superClass="java.awt.Color">
    </class>
    <class modifiers="public" name="javax.tv.graphics.TVContainer" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.locator.Locator" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="javax.tv.locator.LocatorFactory" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.locator.InvalidLocatorException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public" name="javax.tv.locator.MalformedLocatorException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.media.AWTVideoSizeControl" interfaces="javax.media.Control" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.media.MediaSelectControl" interfaces="javax.media.Control" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.media.MediaSelectListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.media.AWTVideoSize" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.media.MediaSelectCARefusedEvent" superClass="javax.tv.media.MediaSelectFailedEvent">
    </class>
    <class modifiers="public abstract" name="javax.tv.media.MediaSelectEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public" name="javax.tv.media.MediaSelectFailedEvent" superClass="javax.tv.media.MediaSelectEvent">
    </class>
    <class modifiers="public final" name="javax.tv.media.MediaSelectPermission" superClass="java.security.Permission">
    </class>
    <class modifiers="public" name="javax.tv.media.MediaSelectSucceededEvent" superClass="javax.tv.media.MediaSelectEvent">
    </class>
    <class name="javax.tv.net.InterfaceMap" found="false"/>
    <class modifiers="public abstract interface" name="javax.tv.service.RatingDimension" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.Service" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.ServiceMinorNumber" interfaces="javax.tv.service.ServiceNumber" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.ServiceNumber" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.SIChangeListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.SIElement" interfaces="javax.tv.service.SIRetrievable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.SIRequest" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.SIRequestor" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.SIRetrievable" isInterface="true=">
    </class>
    <class modifiers="public final" name="javax.tv.service.ReadPermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="javax.tv.service.ServiceInformationType" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.service.ServiceType" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.SIChangeEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public" name="javax.tv.service.SIChangeType" superClass="java.lang.Object">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.SIManager" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.service.SIRequestFailureType" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.service.SIException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.guide.ContentRatingAdvisory" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.guide.ProgramEvent" interfaces="javax.tv.service.SIElement" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.guide.ProgramEventDescription" interfaces="javax.tv.service.SIRetrievable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.guide.ProgramSchedule" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.guide.ProgramScheduleListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.service.guide.ProgramScheduleChangeType" superClass="javax.tv.service.SIChangeType">
    </class>
    <class modifiers="public" name="javax.tv.service.guide.ProgramScheduleEvent" superClass="javax.tv.service.SIChangeEvent">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.CAIdentification" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.FavoriteServicesName" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceComponent" interfaces="javax.tv.service.SIElement" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceComponentChangeListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceDescription" interfaces="javax.tv.service.SIRetrievable" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceDetails" interfaces="javax.tv.service.SIElement,javax.tv.service.navigation.CAIdentification" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceIterator" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceList" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.navigation.ServiceProviderInformation" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.service.navigation.DeliverySystemType" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="javax.tv.service.navigation.LocatorFilter" superClass="javax.tv.service.navigation.ServiceFilter">
    </class>
    <class modifiers="public final" name="javax.tv.service.navigation.PreferenceFilter" superClass="javax.tv.service.navigation.ServiceFilter">
    </class>
    <class modifiers="public" name="javax.tv.service.navigation.ServiceComponentChangeEvent" superClass="javax.tv.service.navigation.ServiceDetailsSIChangeEvent">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.navigation.ServiceDetailsSIChangeEvent" superClass="javax.tv.service.SIChangeEvent">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.navigation.ServiceFilter" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="javax.tv.service.navigation.ServiceTypeFilter" superClass="javax.tv.service.navigation.ServiceFilter">
    </class>
    <class modifiers="public final" name="javax.tv.service.navigation.SIElementFilter" superClass="javax.tv.service.navigation.ServiceFilter">
    </class>
    <class modifiers="public" name="javax.tv.service.navigation.StreamType" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.service.navigation.FilterNotSupportedException" superClass="javax.tv.service.SIException">
    </class>
    <class modifiers="public" name="javax.tv.service.navigation.SortNotAvailableException" superClass="javax.tv.service.SIException">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.selection.ServiceContentHandler" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.selection.ServiceContext" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.selection.ServiceContextListener" interfaces="java.util.EventListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.selection.ServiceMediaHandler" interfaces="javax.media.Player,javax.tv.service.selection.ServiceContentHandler" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.AlternativeContentEvent" superClass="javax.tv.service.selection.PresentationChangedEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.NormalContentEvent" superClass="javax.tv.service.selection.PresentationChangedEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.PresentationChangedEvent" superClass="javax.tv.service.selection.ServiceContextEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.PresentationTerminatedEvent" superClass="javax.tv.service.selection.ServiceContextEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.SelectionFailedEvent" superClass="javax.tv.service.selection.ServiceContextEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.SelectPermission" superClass="java.security.Permission" interfaces="java.io.Serializable">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.ServiceContextDestroyedEvent" superClass="javax.tv.service.selection.ServiceContextEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.ServiceContextEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.selection.ServiceContextFactory" superClass="java.lang.Object">
    </class>
    <class modifiers="public final" name="javax.tv.service.selection.ServiceContextPermission" superClass="java.security.BasicPermission">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.InsufficientResourcesException" superClass="javax.tv.service.selection.ServiceContextException">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.InvalidServiceComponentException" superClass="javax.tv.service.selection.ServiceContextException">
    </class>
    <class modifiers="public" name="javax.tv.service.selection.ServiceContextException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.Bouquet" interfaces="javax.tv.service.SIElement" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.BouquetChangeListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.BouquetCollection" interfaces="javax.tv.service.transport.Transport" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.Network" interfaces="javax.tv.service.SIElement" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.NetworkChangeListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.NetworkCollection" interfaces="javax.tv.service.transport.Transport" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.ServiceDetailsChangeListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.Transport" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.TransportStream" interfaces="javax.tv.service.SIElement" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.TransportStreamChangeListener" interfaces="javax.tv.service.SIChangeListener" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.service.transport.TransportStreamCollection" interfaces="javax.tv.service.transport.Transport" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.service.transport.BouquetChangeEvent" superClass="javax.tv.service.transport.TransportSIChangeEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.transport.NetworkChangeEvent" superClass="javax.tv.service.transport.TransportSIChangeEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.transport.ServiceDetailsChangeEvent" superClass="javax.tv.service.transport.TransportSIChangeEvent">
    </class>
    <class modifiers="public abstract" name="javax.tv.service.transport.TransportSIChangeEvent" superClass="javax.tv.service.SIChangeEvent">
    </class>
    <class modifiers="public" name="javax.tv.service.transport.TransportStreamChangeEvent" superClass="javax.tv.service.transport.TransportSIChangeEvent">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.util.TVTimerWentOffListener" isInterface="true=">
    </class>
    <class modifiers="public abstract" name="javax.tv.util.TVTimer" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.util.TVTimerSpec" superClass="java.lang.Object">
    </class>
    <class modifiers="public" name="javax.tv.util.TVTimerWentOffEvent" superClass="java.util.EventObject">
    </class>
    <class modifiers="public" name="javax.tv.util.TVTimerScheduleFailedException" superClass="java.lang.Exception">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.xlet.Xlet" isInterface="true=">
    </class>
    <class modifiers="public abstract interface" name="javax.tv.xlet.XletContext" isInterface="true=">
    </class>
    <class modifiers="public" name="javax.tv.xlet.XletStateChangeException" superClass="java.lang.Exception">
    </class>
    <result name="JSR-000927 JavaTM TV API 1.1.1" total="167" found="166" compatibility="0.994012"/>
  </spec>
  <spec name="SAX 1.0">
    <class name="org.xml.sax.AttributeList" found="false"/>
    <class name="org.xml.sax.DocumentHandler" found="false"/>
    <class name="org.xml.sax.Parser" found="false"/>
    <class name="org.xml.sax.HandlerBase" found="false"/>
    <class name="org.xml.sax.helpers.AttributeListImpl" found="false"/>
    <class name="org.xml.sax.helpers.LocatorImpl" found="false"/>
    <class name="org.xml.sax.helpers.ParserFactory" found="false"/>
    <result name="SAX 1.0" total="14" found="4" compatibility="0.2857143"/>
  </spec>
  <spec name="SAX 2.0.2">
    <class name="org.xml.sax.ext.DeclHandler" found="false"/>
    <class name="org.xml.sax.ext.EntityResolver2" found="false"/>
    <class name="org.xml.sax.ext.LexicalHandler" found="false"/>
    <class name="org.xml.sax.ext.Locator2" found="false"/>
    <class name="org.xml.sax.ext.Attributes2Impl" found="false"/>
    <class name="org.xml.sax.ext.DefaultHandler2" found="false"/>
    <class name="org.xml.sax.ext.Locator2Impl" found="false"/>
    <class name="org.xml.sax.helpers.AttributesImpl" found="false"/>
    <class name="org.xml.sax.helpers.NamespaceSupport" found="false"/>
    <class name="org.xml.sax.helpers.ParserAdapter" found="false"/>
    <class name="org.xml.sax.helpers.XMLFilterImpl" found="false"/>
    <class name="org.xml.sax.helpers.XMLReaderAdapter" found="false"/>
    <class name="org.xml.sax.helpers.XMLReaderFactory" found="false"/>
    <result name="SAX 2.0.2" total="35" found="8" compatibility="0.22857143"/>
  </spec>
</classes>
