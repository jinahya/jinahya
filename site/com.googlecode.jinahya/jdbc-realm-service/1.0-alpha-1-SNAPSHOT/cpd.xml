<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="47" tokens="150">
<file line="42" path="/var/lib/jenkins/workspace/jinahya.googlecode.com com.googlecode.jinahya jdbc-realm-service/src/main/java/com/googlecode/jinahya/jdbc/realm/service/xsd/SchemaServlet.java"/>
<file line="44" path="/var/lib/jenkins/workspace/jinahya.googlecode.com com.googlecode.jinahya jdbc-realm-service/src/main/java/com/googlecode/jinahya/jdbc/realm/service/xsd/persistence/ServiceSchemaServlet.java"/>
<codefragment>
<![CDATA[
public class ServiceSchemaServlet extends HttpServlet {


    @Override
    protected void doGet(final HttpServletRequest req,
                         final HttpServletResponse resp)
        throws ServletException, IOException {

        try {
            final JAXBContext context =
                JAXBContext.newInstance(RealmService.class);

            final Result output = new StreamResult(resp.getOutputStream());
            output.setSystemId(req.getRequestURL().toString());


            final SchemaOutputResolver resolver = new SchemaOutputResolver() {


                @Override
                public Result createOutput(final String namespaceUri,
                                           final String suggestedFileName)
                    throws IOException {

                    return output;
                }


            };

            resp.setStatus(HttpServletResponse.SC_OK);
            resp.setContentType("application/xml");
            resp.setCharacterEncoding("UTF-8");

            context.generateSchema(resolver);
            resp.flushBuffer();
            return;

        } catch (JAXBException jaxbe) {
            resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,
                           jaxbe.getMessage());
            return;
        }
    }


}
]]>
</codefragment>
</duplication>
<duplication lines="37" tokens="115">
<file line="52" path="/var/lib/jenkins/workspace/jinahya.googlecode.com com.googlecode.jinahya jdbc-realm-service/src/main/java/com/googlecode/jinahya/jdbc/realm/service/xsd/SchemaServlet.java"/>
<file line="52" path="/var/lib/jenkins/workspace/jinahya.googlecode.com com.googlecode.jinahya jdbc-realm-service/src/main/java/com/googlecode/jinahya/jdbc/realm/service/xsd/persistence/AllServlet.java"/>
<codefragment>
<![CDATA[
                "com.googlecode.jinahya.jdbc.realm.persistence");

            final Result output = new StreamResult(resp.getOutputStream());
            output.setSystemId(req.getRequestURL().toString());


            final SchemaOutputResolver resolver = new SchemaOutputResolver() {


                @Override
                public Result createOutput(final String namespaceUri,
                                           final String suggestedFileName)
                    throws IOException {

                    return output;
                }


            };

            resp.setStatus(HttpServletResponse.SC_OK);
            resp.setContentType("application/xml");
            resp.setCharacterEncoding("UTF-8");

            context.generateSchema(resolver);
            resp.flushBuffer();
            return;

        } catch (JAXBException jaxbe) {
            resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,
                           jaxbe.getMessage());
            return;
        }
    }


}
]]>
</codefragment>
</duplication>
</pmd-cpd>