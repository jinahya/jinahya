package org.ocap.media;

/**
 * This class represents possible reasons to trigger an evaluation that leads
 * to the generation of an <code>{@link AlternativeMediaPresentationEvent}</code> or a
 * <code>{@link NormalMediaPresentationEvent}</code>.
 * An application which has a MonitorAppPermission("mediaAccess") can 
 * use predefined <code>MediaPresentationEvaluationTrigger</code> or define its own 
 * <code>MediaPresentationEvaluationTrigger</code> and indicate to the implementation that 
 * presentation conditions have changed through the <code>{@link MediaAccessConditionControl}</code>.
 * <p>  MANDATORY triggers: OCAP implementation  SHALL be able to generate 
 * such trigger independently of the monitor application. 
 * A monitor application cannot generate such triggers exclusively.
 * <br> OPTIONAL triggers: such triggers MAY be generated by the OCAP implementation. 
 * A monitor application can exclusively generate such triggers.
 * @see MediaAccessHandler  
 */
public class MediaPresentationEvaluationTrigger {

    /**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that the
	 * broadcast PMT has changed. 
	 * <br>MANDATORY trigger 
	 */
	public final static MediaPresentationEvaluationTrigger PMT_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that access
	 * to a resource has changed : lost or free resource.
	 * <br>MANDATORY trigger 
	 */
	public final static MediaPresentationEvaluationTrigger RESOURCE_AVAILABILITY_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that a new
	 * service has been selected.
	 * <br>MANDATORY trigger 
	 */
	public final static MediaPresentationEvaluationTrigger NEW_SELECTED_SERVICE = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that new
	 * service components have been selected via JMF control or via ServiceContext.
	 * <br>MANDATORY trigger 
	 */
	public final static MediaPresentationEvaluationTrigger NEW_SELECTED_SERVICE_COMPONENTS = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that the power
	 * state has changed, e.g., switch to Software Standby.
	 * <br>OPTIONAL trigger
	 */
	public final static MediaPresentationEvaluationTrigger POWER_STATE_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that current
	 * program event has changed.
 	 * <br>OPTIONAL trigger
	 */
	public final static MediaPresentationEvaluationTrigger CURRENT_PROGRAM_EVENT_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that the user
	 * preference for rating has been changed.
	 * <br>OPTIONAL trigger
	 */
	public final static MediaPresentationEvaluationTrigger USER_RATING_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * <code>MediaPresentationEvaluationTrigger</code> indicating that program event
	 * rating has changed.
	 * <br>OPTIONAL trigger
	 */
	public final static MediaPresentationEvaluationTrigger PROGRAM_EVENT_RATING_CHANGED = new MediaPresentationEvaluationTrigger();

	/**
	 * Constructs a MediaPresentationEvaluationTrigger.
	 */
	protected MediaPresentationEvaluationTrigger() {
	}
	
	/**
	 * Returns true if the trigger can be generated either by the OCAP implementation or 
	 * by the Monitor Application.
	 * Returns false if the trigger is generated by the OCAP implementation.
	 * @return true if the trigger can be generated either by the implementation or 
	 * 			by the Monitor Application. 
	 * 			<br>false if the trigger is generated by the OCAP implementation.
	 */
	public boolean isOptional() {
		return false;
	}
}